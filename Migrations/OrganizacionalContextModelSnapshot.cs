// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Organizacional.Data;

#nullable disable

namespace Organizacional.Migrations
{
    [DbContext(typeof(OrganizacionalContext))]
    partial class OrganizacionalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Organizacional.Models.Cotizacione", b =>
                {
                    b.Property<int>("IdCotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_cotizacion");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCotizacion"));

                    b.Property<string>("ArchivoUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("archivo_url");

                    b.Property<DateOnly?>("FechaSubida")
                        .HasColumnType("date")
                        .HasColumnName("fecha_subida");

                    b.Property<int>("IdDocumento")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_documento");

                    b.HasKey("IdCotizacion")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDocumento" }, "id_documento");

                    b.ToTable("cotizaciones", (string)null);
                });

            modelBuilder.Entity("Organizacional.Models.Documento", b =>
                {
                    b.Property<int>("IdDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_documento");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDocumento"));

                    b.Property<string>("ArchivoUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("archivo_url");

                    b.Property<bool?>("Asignada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asignada")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("EmpresaDestino")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("empresa_destino");

                    b.Property<DateOnly?>("FechaFin")
                        .HasColumnType("date")
                        .HasColumnName("fecha_fin");

                    b.Property<DateOnly?>("FechaGeneracion")
                        .HasColumnType("date")
                        .HasColumnName("fecha_generacion");

                    b.Property<DateOnly?>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("fecha_inicio");

                    b.Property<DateOnly?>("FechaSubida")
                        .HasColumnType("date")
                        .HasColumnName("fecha_subida");

                    b.Property<int?>("IdUsuarioSubio")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_usuario_subio");

                    b.Property<bool?>("Instalacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("instalacion")
                        .HasDefaultValueSql("'0'");

                    b.Property<bool?>("Mantenimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mantenimiento")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("numero_documento");

                    b.Property<bool?>("Suministro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("suministro")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("enum('Orden','Contrato')")
                        .HasColumnName("tipo_documento");

                    b.HasKey("IdDocumento")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdUsuarioSubio" }, "id_usuario_subio");

                    b.ToTable("documentos", (string)null);
                });

            modelBuilder.Entity("Organizacional.Models.Historial", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_historial");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("accion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int>("IdDocumento")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_documento");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_usuario");

                    b.HasKey("IdHistorial")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDocumento" }, "id_documento")
                        .HasDatabaseName("id_documento1");

                    b.HasIndex(new[] { "IdUsuario" }, "id_usuario");

                    b.ToTable("historial", (string)null);
                });

            modelBuilder.Entity("Organizacional.Models.Mantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FechasRealizadasJson")
                        .HasColumnType("longtext");

                    b.Property<int?>("IdDocumento")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_documento");

                    b.Property<int?>("MantenimientoRealizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("mantenimiento_realizado")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateOnly?>("ProximoMantenimiento")
                        .HasColumnType("date")
                        .HasColumnName("proximo_mantenimiento");

                    b.Property<int?>("TotalMantenimientos")
                        .HasColumnType("int(11)")
                        .HasColumnName("total_mantenimientos");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDocumento" }, "id_documento")
                        .HasDatabaseName("id_documento2");

                    b.ToTable("mantenimientos", (string)null);
                });

            modelBuilder.Entity("Organizacional.Models.Notificacione", b =>
                {
                    b.Property<int>("IdNotificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_notificacion");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdNotificacion"));

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_usuario");

                    b.Property<bool?>("Leida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("leida")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Mensaje")
                        .HasColumnType("text")
                        .HasColumnName("mensaje");

                    b.HasKey("IdNotificacion")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdUsuario" }, "id_usuario")
                        .HasDatabaseName("id_usuario1");

                    b.ToTable("notificaciones", (string)null);
                });

            modelBuilder.Entity("Organizacional.Models.Role", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_rol");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre_rol");

                    b.HasKey("IdRol")
                        .HasName("PRIMARY");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("Organizacional.Models.SedesDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("direccion");

                    b.Property<int>("IdDocumento")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_documento");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDocumento" }, "id_documento")
                        .HasDatabaseName("id_documento3");

                    b.ToTable("sedes_documento", (string)null);
                });

            modelBuilder.Entity("Organizacional.Models.Tarea", b =>
                {
                    b.Property<int>("IdTarea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_tarea");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTarea"));

                    b.Property<bool?>("Completada")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('pendiente','en_progreso','completado')")
                        .HasColumnName("estado")
                        .HasDefaultValueSql("'pendiente'");

                    b.Property<DateOnly?>("FechaAsignacion")
                        .HasColumnType("date")
                        .HasColumnName("fecha_asignacion");

                    b.Property<DateOnly?>("FechaEjecucion")
                        .HasColumnType("date")
                        .HasColumnName("fecha_ejecucion");

                    b.Property<int>("IdDocumento")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_documento");

                    b.Property<int?>("IdTecnicoAsignado")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_tecnico_asignado");

                    b.HasKey("IdTarea")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDocumento" }, "id_documento")
                        .HasDatabaseName("id_documento4");

                    b.HasIndex(new[] { "IdTecnicoAsignado" }, "id_tecnico_asignado");

                    b.ToTable("tareas", (string)null);
                });

            modelBuilder.Entity("Organizacional.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_usuario");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contrasena")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contrasena");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("correo");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('activo','inactivo')")
                        .HasColumnName("estado")
                        .HasDefaultValueSql("'activo'");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_rol");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("IdUsuario")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdRol" }, "id_rol");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("Organizacional.Models.Cotizacione", b =>
                {
                    b.HasOne("Organizacional.Models.Documento", "IdDocumentoNavigation")
                        .WithMany("Cotizaciones")
                        .HasForeignKey("IdDocumento")
                        .IsRequired()
                        .HasConstraintName("cotizaciones_ibfk_1");

                    b.Navigation("IdDocumentoNavigation");
                });

            modelBuilder.Entity("Organizacional.Models.Documento", b =>
                {
                    b.HasOne("Organizacional.Models.Usuario", "IdUsuarioSubioNavigation")
                        .WithMany("Documentos")
                        .HasForeignKey("IdUsuarioSubio")
                        .HasConstraintName("documentos_ibfk_1");

                    b.Navigation("IdUsuarioSubioNavigation");
                });

            modelBuilder.Entity("Organizacional.Models.Historial", b =>
                {
                    b.HasOne("Organizacional.Models.Documento", "IdDocumentoNavigation")
                        .WithMany("Historials")
                        .HasForeignKey("IdDocumento")
                        .IsRequired()
                        .HasConstraintName("historial_ibfk_2");

                    b.HasOne("Organizacional.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Historials")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("historial_ibfk_1");

                    b.Navigation("IdDocumentoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Organizacional.Models.Mantenimiento", b =>
                {
                    b.HasOne("Organizacional.Models.Documento", "IdDocumentoNavigation")
                        .WithMany("Mantenimientos")
                        .HasForeignKey("IdDocumento")
                        .HasConstraintName("mantenimientos_ibfk_1");

                    b.Navigation("IdDocumentoNavigation");
                });

            modelBuilder.Entity("Organizacional.Models.Notificacione", b =>
                {
                    b.HasOne("Organizacional.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Notificaciones")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("notificaciones_ibfk_1");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Organizacional.Models.SedesDocumento", b =>
                {
                    b.HasOne("Organizacional.Models.Documento", "IdDocumentoNavigation")
                        .WithMany("SedesDocumentos")
                        .HasForeignKey("IdDocumento")
                        .IsRequired()
                        .HasConstraintName("sedes_documento_ibfk_1");

                    b.Navigation("IdDocumentoNavigation");
                });

            modelBuilder.Entity("Organizacional.Models.Tarea", b =>
                {
                    b.HasOne("Organizacional.Models.Documento", "IdDocumentoNavigation")
                        .WithMany("Tareas")
                        .HasForeignKey("IdDocumento")
                        .IsRequired()
                        .HasConstraintName("tareas_ibfk_1");

                    b.HasOne("Organizacional.Models.Usuario", "IdTecnicoAsignadoNavigation")
                        .WithMany("Tareas")
                        .HasForeignKey("IdTecnicoAsignado")
                        .HasConstraintName("tareas_ibfk_2");

                    b.Navigation("IdDocumentoNavigation");

                    b.Navigation("IdTecnicoAsignadoNavigation");
                });

            modelBuilder.Entity("Organizacional.Models.Usuario", b =>
                {
                    b.HasOne("Organizacional.Models.Role", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("usuarios_ibfk_1");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("Organizacional.Models.Documento", b =>
                {
                    b.Navigation("Cotizaciones");

                    b.Navigation("Historials");

                    b.Navigation("Mantenimientos");

                    b.Navigation("SedesDocumentos");

                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("Organizacional.Models.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Organizacional.Models.Usuario", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Historials");

                    b.Navigation("Notificaciones");

                    b.Navigation("Tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
